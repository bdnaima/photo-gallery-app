[{"/Users/naimamalik/Documents/photo-gallery-app/src/App.js":"1","/Users/naimamalik/Documents/photo-gallery-app/src/index.js":"2","/Users/naimamalik/Documents/photo-gallery-app/src/components/authentication/Signin.js":"3","/Users/naimamalik/Documents/photo-gallery-app/src/components/layout/Navigation.js":"4","/Users/naimamalik/Documents/photo-gallery-app/src/components/authentication/Signup.js":"5","/Users/naimamalik/Documents/photo-gallery-app/src/firebase/firebaseIndex.js":"6","/Users/naimamalik/Documents/photo-gallery-app/src/contexts/AuthContext.js":"7","/Users/naimamalik/Documents/photo-gallery-app/src/components/layout/Albums.js":"8","/Users/naimamalik/Documents/photo-gallery-app/src/components/layout/NewAlbumModal.js":"9","/Users/naimamalik/Documents/photo-gallery-app/src/components/layout/AlbumImages.js":"10","/Users/naimamalik/Documents/photo-gallery-app/src/hooks/useStorage.js":"11","/Users/naimamalik/Documents/photo-gallery-app/src/components/layout/UploadImage.js":"12","/Users/naimamalik/Documents/photo-gallery-app/src/components/layout/Customer.js":"13","/Users/naimamalik/Documents/photo-gallery-app/src/components/layout/ShareModal.js":"14","/Users/naimamalik/Documents/photo-gallery-app/src/components/layout/LandingPage.js":"15"},{"size":1298,"mtime":1624100948236,"results":"16","hashOfConfig":"17"},{"size":221,"mtime":1610370642092,"results":"18","hashOfConfig":"17"},{"size":3551,"mtime":1624107800803,"results":"19","hashOfConfig":"17"},{"size":1024,"mtime":1624106919298,"results":"20","hashOfConfig":"17"},{"size":4713,"mtime":1624114149869,"results":"21","hashOfConfig":"17"},{"size":750,"mtime":1617620254083,"results":"22","hashOfConfig":"17"},{"size":690,"mtime":1624107392101,"results":"23","hashOfConfig":"17"},{"size":3590,"mtime":1623940996298,"results":"24","hashOfConfig":"17"},{"size":2747,"mtime":1613129842523,"results":"25","hashOfConfig":"17"},{"size":7677,"mtime":1613135429050,"results":"26","hashOfConfig":"17"},{"size":1688,"mtime":1618562379754,"results":"27","hashOfConfig":"17"},{"size":744,"mtime":1613111367367,"results":"28","hashOfConfig":"17"},{"size":5434,"mtime":1617358754830,"results":"29","hashOfConfig":"17"},{"size":2126,"mtime":1610640253279,"results":"30","hashOfConfig":"17"},{"size":2086,"mtime":1624107012976,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ohxc7v",{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"51"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/naimamalik/Documents/photo-gallery-app/src/App.js",[],"/Users/naimamalik/Documents/photo-gallery-app/src/index.js",[],["66","67"],"/Users/naimamalik/Documents/photo-gallery-app/src/components/authentication/Signin.js",[],"/Users/naimamalik/Documents/photo-gallery-app/src/components/layout/Navigation.js",[],"/Users/naimamalik/Documents/photo-gallery-app/src/components/authentication/Signup.js",[],"/Users/naimamalik/Documents/photo-gallery-app/src/firebase/firebaseIndex.js",[],"/Users/naimamalik/Documents/photo-gallery-app/src/contexts/AuthContext.js",[],"/Users/naimamalik/Documents/photo-gallery-app/src/components/layout/Albums.js",[],"/Users/naimamalik/Documents/photo-gallery-app/src/components/layout/NewAlbumModal.js",[],["68","69"],"/Users/naimamalik/Documents/photo-gallery-app/src/components/layout/AlbumImages.js",["70"],"import React, { useState, useEffect } from 'react';\nimport { Card, Button, Jumbotron, Container } from 'react-bootstrap';\nimport { useParams, Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { db } from '../../firebase/firebaseIndex';\nimport Navigation from '../layout/Navigation';\nimport UploadImage from '../layout/UploadImage';\nimport NewAlbumModal from '../layout/NewAlbumModal';\nimport ShareModal from './ShareModal';\nimport { SRLWrapper } from \"simple-react-lightbox\";\n\nconst StyledForm = styled.form`\nform {\n  margin: 30px auto 10px;\n  text-align: center;\n}\nlabel input{\n  height: 0;\n  width: 10px;\n  opacity: 0;\n}\nlabel{\n  display: block;\n  width: 40px;\n  height: 40px;\n  border: 2px solid purple;\n  border-radius: 50%;\n  margin: 10px auto;\n  line-height: 28px;\n  color: #4B0082;\n  font-weight: bold;\n  font-size: 24px;\n}\nlabel:hover{\n  background: purple;\n  color: white;\n}\n`;\n\nconst StyledBody = styled.div`\n    background-color: lightgray;\n`\n\nconst AlbumImages = () => {\n    const [imageFiles, setImageFiles] = useState(null);\n    const { albumId } = useParams();\n    const [error, setError] = useState(null);\n    const [message, setMessage] = useState(\"\");\n    const [images, setImages] = useState([]); \n    const [selectedImgs, setSelectedImgs] = useState({});\n    const [ title, setTitle ] = useState('');\n    const [ owner, setOwner ] = useState();\n    const types = ['image/png', 'image/jpeg'];\n\n    //Get Images\n    useEffect(() => {\n        const unsubscribe = db.collection('images')\n            .where('albumRef', '==', db.collection('albums').doc(albumId))\n            .orderBy('createdAt', 'desc')\n            .onSnapshot((snapshot) => {\n\n            const documents = [];\n\n            snapshot.forEach(doc => {\n                let data = doc.data();\n                data.id = doc.id\n                documents.push(data);\n            })\n            setImages(documents);\n            \n        });\n        \n        //Unsubscribe from the collection when we are no longer using it.\n        return unsubscribe;\n        \n    }, [albumId]);\n\n    // Editing Album Name\n    useEffect(() => {\n        const unsubscribe = db.collection('albums').doc(albumId).onSnapshot(snapshot => {\n            const data = snapshot.data()\n            setTitle(data.title);\n            setOwner(data.owner);\n        });\n\n        return unsubscribe;\n    }, [albumId])\n\n\n    const handleChange = (e) => {\n        let selectedFiles = e.target.files;\n        const files = [...selectedFiles]\n\n        if(files.find(file => {\n            return !types.includes(file.type)\n        })) {\n            setImageFiles(null);\n            setError('Please select an image file either png or jpeg');  \n        } else {\n            setImageFiles(files);\n            setError(\"\");\n        }\n    }\n\n    const handleSelectedImgs = (image) => {\n        const newSelectedImgs = {}\n        Object.assign(newSelectedImgs, selectedImgs)\n        if (selectedImgs[image.id]) {\n            delete newSelectedImgs[image.id]\n        } else {\n            newSelectedImgs[image.id] = image.url\n        }\n\n        setSelectedImgs(newSelectedImgs)\n    }    \n\n    const handleEdit = () => {\n        const newTitle = window.prompt(\"Edit Album Name\", title)\n\n        if (!newTitle) return\n        db.collection('albums').doc(albumId)\n            .set({title: newTitle}, {merge: true})\n    }\n\n    const handleDone = () => {\n        setSelectedImgs({});\n        setMessage(\"Album created!\")\n    }\n\n    const selectedUrls = Object.values(selectedImgs)\n\n    return (\n        <>\n            <Navigation />\n            <StyledBody>\n                <Jumbotron fluid>\n                    <Container>\n                        <h1 style={{color: \"lightgray\", fontFamily: \"cursive\"}}>Creating for everyone</h1>\n                    </Container>\n                </Jumbotron>\n                <h1 style={{fontFamily: \"Cursive\", textAlign:\"center\"}}>{title}</h1>\n                \n                <StyledForm>\n                    <label>\n                        <input \n                            onChange={handleChange}\n                            type=\"file\" \n                            multiple/>\n                        <span>+</span>\n                    </label>\n                    <div style={{\n                            display: \"flex\", \n                            justifyContent: \"space-evenly\"\n                            }}>\n                        <Link to=\"/albums\">\n                            <Button>All Albums</Button>\n                         </Link>\n                        <Button  onClick={handleEdit}>Edit album</Button>\n                        <ShareModal />\n                        <NewAlbumModal\n                            owner={owner}\n                            label=\"Create Album\" \n                            message=\"Create a new album with these photos\" \n                            placeholder=\"Enter name\" \n                            urls={selectedUrls} \n                            disabled={selectedUrls.length == 0} \n                            onDone={handleDone}\n                        />\n                    </div>\n                    <div style={{\n                            backgroundColor: \"plum\", \n                            maxWidth: \"30em\", \n                            marginRight:'auto', \n                            marginLeft: 'auto', \n                            textAlign: 'center',\n                            fontWeight:\"bold\"\n                        }}>\n                        {error && <div style={{color: \"red\"}}>\n                            {error}\n                        </div>}\n                    \n                        <UploadImage \n                            imageFiles={imageFiles} \n                            setImageFiles={setImageFiles} \n                            albumId={albumId} \n                            setMessage={setMessage}\n                        />\n                        <div>{message}</div>\n                    </div>\n                </StyledForm>\n                <SRLWrapper>\n                    <section style={{\n                            display: \"Flex\", \n                            placeContent:\"flex-start\", \n                            flexWrap: \"wrap\",\n                            marginTop: \"2em\"}}>\n                    \n                        {images && images.map(image => (\n                            <Card\n                                style={{ \n                                    width: '18rem', \n                                    marginBottom:\"2em\", \n                                    margin: \"1em\",\n                                    border: selectedImgs[image.id] ? \"4px solid purple\" : \"none\" }}\n                                key={image.id}>\n                                <Button onClick={() => handleSelectedImgs(image)} style={{backgroundColor:\"plum\", color:\"black\"}}>Select</Button>\n                                <input \n                                    type=\"checkbox\"\n                                    style={{position: 'absolute'}}\n                                    checked={ selectedImgs[image.id] ? true : false}\n                                    onChange={() => handleSelectedImgs(image)} \n                                />\n                                <a href={image.url} title=\"View image in lightbox\" data-attribute=\"SRL\">\n                                    <Card.Img variant=\"top\" src={image.url} />\n                                </a>\n                            </Card>\n                        ))}\n                    </section>\n                </SRLWrapper>\n            </StyledBody>\n        </>\n    )\n}\n\n\nexport default AlbumImages;\n","/Users/naimamalik/Documents/photo-gallery-app/src/hooks/useStorage.js",["71"],"import { useState, useEffect, useRef } from 'react';\nimport { storage, db, timestamp, } from '../firebase/firebaseIndex';\n\nconst useStorage = (files, albumId) => {\n    const [progress, setProgress] = useState(0);\n    const [isSuccess, setIsSuccess] = useState(false);\n    const [error, setError] = useState(null);\n    const [isLoading, setIsLoading] = useState(false);\n    const completed = useRef()\n\n    useEffect(() => {\n\n        if (!files) return;\n\n        setIsSuccess(false);\n        completed.current = 0\n\n        // set progress, error and imageURL inside upload progress\n        files.forEach(file => {\n            const storageRef = storage.ref(Date.now() + '_' + file.name)\n            const collectionRef = db.collection('images');\n            storageRef.put(file).on('state_changed', snap => {\n                let percentage = (snap.bytesTransferred / snap.totalBytes) * 100;\n                setProgress(percentage)\n            }, (err) => {\n                completed.current += 1\n                isLoading(false)\n                setError(err);\n            }, async () => {\n                const url = await storageRef.getDownloadURL();\n                const albumRef = db.collection('albums').doc(albumId);\n                const createdAt = timestamp();\n                collectionRef.add({url, createdAt, albumRef});\n                completed.current += 1\n                if(files.length === completed.current) {\n                    setIsSuccess(true);\n                    setIsLoading(false)\n                }\n            })\n        })\n\n        setIsLoading(true)\n\n    }, [files, albumId])\n\n    return { progress, isSuccess, isLoading, error }\n}\n\nexport default useStorage;","/Users/naimamalik/Documents/photo-gallery-app/src/components/layout/UploadImage.js",[],"/Users/naimamalik/Documents/photo-gallery-app/src/components/layout/Customer.js",[],"/Users/naimamalik/Documents/photo-gallery-app/src/components/layout/ShareModal.js",[],"/Users/naimamalik/Documents/photo-gallery-app/src/components/layout/LandingPage.js",[],{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","replacedBy":"75"},{"ruleId":"72","replacedBy":"76"},{"ruleId":"74","replacedBy":"77"},{"ruleId":"78","severity":1,"message":"79","line":166,"column":59,"nodeType":"80","messageId":"81","endLine":166,"endColumn":61},{"ruleId":"82","severity":1,"message":"83","line":44,"column":8,"nodeType":"84","endLine":44,"endColumn":24,"suggestions":"85"},"no-native-reassign",["86"],"no-negated-in-lhs",["87"],["86"],["87"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'isLoading'. Either include it or remove the dependency array.","ArrayExpression",["88"],"no-global-assign","no-unsafe-negation",{"desc":"89","fix":"90"},"Update the dependencies array to be: [files, albumId, isLoading]",{"range":"91","text":"92"},[1587,1603],"[files, albumId, isLoading]"]